apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: {{ .Values.namespace }}
  labels:
    app: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      containers:
      - name: external-dns
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        args:
        {{- if .Values.dryRun }}
        - --dry-run
        {{- end }}
        {{- range .Values.dnsConfig.sources }}
        - --source={{ . }}
        {{- end }}
        - --provider=google
        {{- range .Values.dnsConfig.domainFilters }}
        - --domain-filter={{ . }}
        {{- end }}
        - --google-project={{ .Values.dnsConfig.gcpProject }}
        {{- if .Values.upsertOnly }}
        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        {{- end  }}
        - --registry=txt
        - --txt-owner-id={{ .Values.dnsConfig.txtOwner }}
        {{- if eq (.Values.kubernetesProvider|toString) "EKS" }}
        - '--txt-prefix=aws-'
        {{- end }}
        {{- if eq (.Values.kubernetesProvider|toString) "AKS" }}
        - '--txt-prefix=azure-'
        {{- end }}
        - --interval=5m0s
        - --events
        - --log-level={{ .Values.logLevel }}
        volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/external-dns-credentials.json
      volumes:
        - name: google-cloud-key
          secret:
            secretName: external-dns-credentials
